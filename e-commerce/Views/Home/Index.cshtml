@model Data.DTOs.ProductDisplayModel
@{

}
<div class="my-2">
    <form asp-action="Index" class="row row-cols-lg-auto g-3 align-items-center">
        

        <div class="col-12">
            <label class="visually-hidden" for="sterm">Search by title</label>
            <div class="input-group">
                <div class="input-group-text"></div>
                <input type="text" class="form-control" value="@Model.STerm" id="sterm" name="sterm" placeholder="Sarch by title">
            </div>
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="/Home/Index" class="btn btn-dark">Reset</a>
        </div>
    </form>
</div>

<div class="w-100 mt-4 d-flex flex-wrap ">
    @foreach (var product in Model.products)
    {
        <div class="card mx-3 mb-4" style="width: 11rem;">
           
            <div class="card-body">
                <h5 class="card-title">@product.Name</h5>
                <p class="card-text">
                    <b>Price: </b>@product.Price
                </p>

                <button type="button" onclick="add(@product.Id)" class="btn btn-primary">Add to cart</button>
               @*  @if (product.Quantity > 0)
                {
                    <button type="button" onclick="add(@product.Id)" class="btn btn-primary">Add to cart</button>
                }
                else
                {
                    <span style="border: 1px solid;padding: 5px 8px;color: red;border-radius: 5px;">Out of stock</span>
                } *@
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
       debugger;
        async function add(productId) {
            if (!productId) {
                console.error("Product ID is not valid.");
                return;
            }

            try {
                // Send the request to the server to add the item to the cart
                var response = await fetch(`/Cart/AddItem?productId=${productId}`);

                // Check if the response status is successful (2xx)
                if (response.ok) {
                    // Get the result from the response (assuming it's a JSON)
                    var result = await response.json();

                    // Ensure the element exists before trying to update it
                    var cartCountEl = document.getElementById("cartCount");
                    if (cartCountEl) {
                        // Update the cart count on the page
                        cartCountEl.innerHTML = result.cartCount; // Assuming result has cartCount
                    } else {
                        console.error("Cart count element not found on the page.");
                    }

                    // Optionally redirect after the action has completed
                    window.location.href = "#cartCount";
                } else {
                    // Handle non-200 responses
                    console.error("Failed to add item to cart. Status: " + response.status);
                }
            } catch (err) {
                // Handle any network or unexpected errors
                console.error("An error occurred:", err);
            }
        }
    </script>


    }

